{"name":"Libogg","tagline":"Mirror of git://git.xiph.org/mirrors/ogg.git","body":"********************************************************************\r\n*                                                                  *\r\n* THIS FILE IS PART OF THE OggVorbis SOFTWARE CODEC SOURCE CODE.   *\r\n* USE, DISTRIBUTION AND REPRODUCTION OF THIS LIBRARY SOURCE IS     *\r\n* GOVERNED BY A BSD-STYLE SOURCE LICENSE INCLUDED WITH THIS SOURCE *\r\n* IN 'COPYING'. PLEASE READ THESE TERMS BEFORE DISTRIBUTING.       *\r\n*                                                                  *\r\n* THE OggVorbis SOURCE CODE IS (C) COPYRIGHT 1994-2011             *\r\n* by the Xiph.Org Foundation http://www.xiph.org/                  *\r\n*                                                                  *\r\n********************************************************************\r\n\r\n= WHAT'S HERE =\r\n\r\nThis source distribution includes libogg and nothing else. Other modules\r\n(eg, the modules libvorbis, vorbis-tools for the Vorbis music codec,\r\nlibtheora for the Theora video codec) contain the codec libraries for\r\nuse with Ogg bitstreams.\r\n\r\nDirectory:\r\n\r\n./src  \t\tThe source for libogg, a BSD-license inplementation of\r\n\t\tthe public domain Ogg bitstream format\r\n\r\n./include       Library API headers\r\n\r\n./doc           Ogg specification and libogg API documents\r\n\r\n./win32\t\tWin32 projects and build automation\r\n\r\n./macosx\tMac OS X project and build files\r\n\r\n= WHAT IS OGG? =\r\n\r\nOgg project codecs use the Ogg bitstream format to arrange the raw,\r\ncompressed bitstream into a more robust, useful form.  For example,\r\nthe Ogg bitstream makes seeking, time stamping and error recovery\r\npossible, as well as mixing several sepearate, concurrent media\r\nstreams into a single physical bitstream.\r\n\r\n= CONTACT =\r\n\r\nThe Ogg homepage is located at 'https://www.xiph.org/ogg/'.\r\nUp to date technical documents, contact information, source code and\r\npre-built utilities may be found there.\r\n\r\nBUILDING FROM TARBALL DISTRIBUTIONS:\r\n\r\n./configure\r\nmake\r\n\r\nand optionally (as root):\r\nmake install\r\n\r\nThis will install the Ogg libraries (static and shared) into\r\n/usr/local/lib, includes into /usr/local/include and API\r\ndocumentation into /usr/local/share/doc.\r\n\r\nBUILDING FROM REPOSITORY SOURCE:\r\n\r\nA standard svn build should consist of nothing more than:\r\n\r\n./autogen.sh\r\nmake\r\n\r\nand as root if desired :\r\n\r\nmake install\r\n\r\nBUILDING ON WIN32:\r\n\r\nUse the project file in the win32 directory. It should compile out of the box.\r\n\r\nCROSS COMPILING FROM LINUX TO WIN32:\r\n\r\nIt is also possible to cross compile from Linux to windows using the MinGW\r\ncross tools and even to run the test suite under Wine, the Linux/*nix\r\nwindows emulator.\r\n\r\nOn Debian and Ubuntu systems, these cross compiler tools can be installed\r\nby doing:\r\n\r\n    sudo apt-get mingw32 mingw32-binutils mingw32-runtime wine\r\n\r\nOnce these tools are installed its possible to compile and test by\r\nexecuting the following commands, or something similar depending on\r\nyour system:\r\n\r\n    ./configure --host=i586-mingw32msvc --target=i586-mingw32msvc \\\r\n         --build=i586-linux\r\n    make\r\n    make check\r\n\r\n(Build instructions for Ogg codecs such as vorbis are similar and may\r\nbe found in those source modules' README files)\r\n\r\n$Id$\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}